{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/KaanT/PycharmProjects/Testt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"C:/Users/KaanT/PycharmProjects/Testt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/KaanT/PycharmProjects/Testt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/KaanT/PycharmProjects/Testt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KaanT\\\\PycharmProjects\\\\Testt\\\\src\\\\screens\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport ModalUnstyled from '@mui/core/ModalUnstyled';\nimport { Typography, Button, Modal, Box, TextField, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { ADD, getData } from \"../actions/action\";\nexport const LoginPage = () => {\n  _s();\n\n  const _React$useState = React.useState([{\n    name: \"\",\n    currency: \"\",\n    incoming: \"\",\n    expense: \"\"\n  }]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const _React$useState5 = React.useState({\n    name: '',\n    currency: '',\n    incoming: '',\n    expense: ''\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        formInfo = _React$useState6[0],\n        setFormInfo = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        textData = _React$useState8[0],\n        setTextData = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        change = _React$useState10[0],\n        setChange = _React$useState10[1];\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function addData() {\n    return _addData.apply(this, arguments);\n  }\n\n  function _addData() {\n    _addData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var state, checker;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getData();\n\n          case 2:\n            state = _context.sent.data;\n            //data.push(formInfo)\n            if (state) state.push({\n              name: formInfo.name,\n              currency: formInfo.currency,\n              incoming: formInfo.incoming,\n              expense: formInfo.expense\n            });else state = [{\n              name: formInfo.name,\n              currency: formInfo.currency,\n              incoming: formInfo.incoming,\n              expense: formInfo.expense\n            }];\n            _context.next = 6;\n            return ADD(state);\n\n          case 6:\n            checker = _context.sent;\n            setChange(!change);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _addData.apply(this, arguments);\n  }\n\n  React.useEffect(() => {\n    getData().then(currentData => {\n      if (!Object.keys(currentData) || !currentData.data) setData([{\n        name: \"test\",\n        currency: \"test\",\n        incoming: \"test\",\n        expense: \"test\"\n      }]);else setData(currentData.data);\n    });\n  }, [change]); //console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Kur Hesaplay\\u0131c\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Incoming\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.incoming\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.expense\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Veri Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Veri Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginBottom: 10\n          },\n          id: \"outlined-basic\",\n          label: \"Name\",\n          variant: \"outlined\",\n          value: formInfo.name,\n          onChange: e => {\n            setFormInfo(_objectSpread(_objectSpread({}, formInfo), {}, {\n              name: e.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginBottom: 10\n          },\n          id: \"outlined-basic\",\n          label: \"Currency\",\n          variant: \"outlined\",\n          value: formInfo.currency,\n          onChange: e => {\n            setFormInfo(_objectSpread(_objectSpread({}, formInfo), {}, {\n              currency: e.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginBottom: 10\n          },\n          id: \"outlined-basic\",\n          label: \"Incoming\",\n          variant: \"outlined\",\n          value: formInfo.incoming,\n          onChange: e => {\n            setFormInfo(_objectSpread(_objectSpread({}, formInfo), {}, {\n              incoming: e.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginBottom: 10\n          },\n          id: \"outlined-basic\",\n          label: \"Expense\",\n          variant: \"outlined\",\n          value: formInfo.expense,\n          onChange: e => {\n            setFormInfo(_objectSpread(_objectSpread({}, formInfo), {}, {\n              expense: e.target.value\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            addData();\n            setOpen(false);\n          },\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpen(false);\n          },\n          children: \"Kapat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoginPage, \"hpVlE22qNOF7FlQpptTDeq0IFoI=\");\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/KaanT/PycharmProjects/Testt/src/screens/LoginPage.js"],"names":["React","ModalUnstyled","Typography","Button","Modal","Box","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","ADD","getData","LoginPage","useState","name","currency","incoming","expense","data","setData","open","setOpen","formInfo","setFormInfo","textData","setTextData","change","setChange","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","handleOpen","handleClose","addData","state","push","checker","useEffect","then","currentData","Object","keys","minWidth","map","row","marginBottom","e","target","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport ModalUnstyled from '@mui/core/ModalUnstyled';\r\nimport {Typography,Button,Modal,Box,TextField,Table,TableBody,TableCell,TableContainer,TableHead,TableRow, Paper} from '@mui/material';\r\nimport {ADD, getData} from \"../actions/action\"\r\n\r\n\r\nexport const LoginPage = () => {\r\n  const [data,setData]=React.useState([{name : \"\",\r\n      currency : \"\",\r\n      incoming : \"\",\r\n      expense: \"\"}])\r\n  const [open, setOpen] = React.useState(false);\r\n  const [formInfo, setFormInfo] = React.useState({name: '',currency:'',incoming: '',expense:''})\r\n  const [textData,setTextData]=React.useState(\"\");\r\n  const [change, setChange] = React.useState(false);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const handleOpen = () => {setOpen(true);}\r\n  const handleClose = () => {setOpen(false);}\r\n\r\n  async function addData(){\r\n    let state = (await getData()).data\r\n    //data.push(formInfo)\r\n    if (state) state.push({name:formInfo.name, currency:formInfo.currency, incoming: formInfo.incoming, expense: formInfo.expense})\r\n    else state = [{name:formInfo.name, currency:formInfo.currency, incoming: formInfo.incoming, expense: formInfo.expense}]\r\n    const checker = await ADD(state)\r\n    setChange(!change)\r\n  }\r\n\r\n  React.useEffect(()=> {\r\n      getData().then((currentData)=> {\r\n          if(!Object.keys(currentData) || !currentData.data) setData([{name : \"test\",\r\n              currency : \"test\",\r\n              incoming : \"test\",\r\n              expense: \"test\"}])\r\n          else setData(currentData.data)\r\n      })\r\n  }, [change])\r\n\r\n    //console.log(data)\r\n  return (\r\n      <div className=\"App\">\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Kur Hesaplayıcı</TableCell>\r\n                <TableCell align=\"right\">Name</TableCell>\r\n                <TableCell align=\"right\">Currency</TableCell>\r\n                <TableCell align=\"right\">Incoming</TableCell>\r\n                <TableCell align=\"right\">Expense</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((row) => (\r\n                  <TableRow\r\n                      key={row.name}\r\n                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.currency}</TableCell>\r\n                    <TableCell align=\"right\">{row.incoming}</TableCell>\r\n                    <TableCell align=\"right\">{row.expense}</TableCell>\r\n                  </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Button onClick={handleOpen}>Veri Ekle</Button>\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n              Veri Ekle\r\n            </Typography>\r\n\r\n            <TextField style ={{marginBottom:10}} id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={formInfo.name}\r\n                       onChange={(e) => {\r\n                         setFormInfo({...formInfo, name: e.target.value})\r\n                       }}\r\n            />\r\n            <TextField style ={{marginBottom:10}} id=\"outlined-basic\" label=\"Currency\" variant=\"outlined\" value={formInfo.currency}\r\n                       onChange={(e) => {\r\n                         setFormInfo({...formInfo, currency: e.target.value})\r\n                       }}\r\n            />\r\n            <TextField style ={{marginBottom:10}} id=\"outlined-basic\" label=\"Incoming\" variant=\"outlined\" value={formInfo.incoming}\r\n                       onChange={(e) => {\r\n                         setFormInfo({...formInfo, incoming: e.target.value})\r\n                       }}\r\n            />\r\n            <TextField style ={{marginBottom:10}} id=\"outlined-basic\" label=\"Expense\" variant=\"outlined\" value={formInfo.expense}\r\n                       onChange={(e) => {\r\n                         setFormInfo({...formInfo, expense: e.target.value})\r\n                       }}\r\n            />\r\n            <Button onClick={()=>{addData();setOpen(false)}}>Ekle</Button>\r\n            <Button onClick={()=>{setOpen(false)}}>Kapat</Button>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}